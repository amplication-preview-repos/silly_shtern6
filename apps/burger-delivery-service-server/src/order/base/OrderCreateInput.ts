/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BurgerWhereUniqueInput } from "../../burger/base/BurgerWhereUniqueInput";
import { ValidateNested, IsOptional, IsDate, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { CustomerWhereUniqueInput } from "../../customer/base/CustomerWhereUniqueInput";
import { DeliveryCreateNestedManyWithoutOrdersInput } from "./DeliveryCreateNestedManyWithoutOrdersInput";
import { DeliveryWhereUniqueInput } from "../../delivery/base/DeliveryWhereUniqueInput";
import { MapTrackingCreateNestedManyWithoutOrdersInput } from "./MapTrackingCreateNestedManyWithoutOrdersInput";
import { EnumOrderStatus } from "./EnumOrderStatus";

@InputType()
class OrderCreateInput {
  @ApiProperty({
    required: false,
    type: () => BurgerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BurgerWhereUniqueInput)
  @IsOptional()
  @Field(() => BurgerWhereUniqueInput, {
    nullable: true,
  })
  burger?: BurgerWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => CustomerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CustomerWhereUniqueInput)
  @IsOptional()
  @Field(() => CustomerWhereUniqueInput, {
    nullable: true,
  })
  customer?: CustomerWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => DeliveryCreateNestedManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => DeliveryCreateNestedManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => DeliveryCreateNestedManyWithoutOrdersInput, {
    nullable: true,
  })
  deliveries?: DeliveryCreateNestedManyWithoutOrdersInput;

  @ApiProperty({
    required: false,
    type: () => DeliveryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DeliveryWhereUniqueInput)
  @IsOptional()
  @Field(() => DeliveryWhereUniqueInput, {
    nullable: true,
  })
  delivery?: DeliveryWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => MapTrackingCreateNestedManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => MapTrackingCreateNestedManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => MapTrackingCreateNestedManyWithoutOrdersInput, {
    nullable: true,
  })
  mapTrackings?: MapTrackingCreateNestedManyWithoutOrdersInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  orderDate?: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumOrderStatus,
  })
  @IsEnum(EnumOrderStatus)
  @IsOptional()
  @Field(() => EnumOrderStatus, {
    nullable: true,
  })
  status?: "Option1" | null;
}

export { OrderCreateInput as OrderCreateInput };
